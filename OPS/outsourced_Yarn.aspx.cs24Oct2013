using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;

public partial class OPS_outsourced_Yarn : System.Web.UI.Page
{

    SqlConnection con = new SqlConnection(System.Web.Configuration.WebConfigurationManager.ConnectionStrings["test"].ConnectionString);
    protected void Page_Load(object sender, EventArgs e)
    {
        SqlCommand cmd = new SqlCommand("jct_ops_yarn_select", con);
        con.Open();
        cmd.CommandType = CommandType.StoredProcedure;
        //cmd.Parameters.Add("@requestid", SqlDbType.VarChar, 30).Value = lbid.Text;
        cmd.ExecuteNonQuery();
        con.Close();
        SqlDataAdapter da = new SqlDataAdapter(cmd);
        DataSet ds = new DataSet();
        da.Fill(ds);
        GrdDetail.DataSource = ds.Tables[0];
        GrdDetail.DataBind();
    }

    private void gencode()
    {


        string str;



        //SqlConnection con = new SqlConnection(@"Data Source=TEST2K;Initial Catalog=jctdev;User ID=trainee ;password=trainee");
        con.Open();

        SqlCommand cmd = new SqlCommand("select SUBSTRING(max(requestid),CHARINDEX('-',max( requestid))+1,len(max(requestid))+2) from jct_ops_yarn_purchase", con);
        SqlDataReader dr = cmd.ExecuteReader();
        //dr.Read();
        if (dr.HasRows)
        {

            while (dr.Read())
            {
                str = dr[0].ToString();
                if (string.IsNullOrEmpty(dr[0].ToString()))
                {
                    ViewState["RequestID"] = "100";
                    ViewState["RequestID"] = "YR-" + ViewState["RequestID"];
                }
                else
                {
                    ViewState["RequestID"] = int.Parse(dr[0].ToString()) + 1;
                    ViewState["RequestID"] = "YR-" + ViewState["RequestID"];
                }
            }

        }

        dr.Close();
        con.Close();
    }

    private void insert()
    {


        if (txtreqqty.Text == "" || txtquality.Text == "")
        {
            string script = "alert(' Error Occured!  some data may be missing.. please fill!! ');";
            ScriptManager.RegisterStartupScript(this, this.GetType(), "ServerControlScript", script, true);

            return;
        }

        try
        {
            SqlCommand cmd = new SqlCommand("jct_ops_yarn_purchase_insert", con);
            cmd.CommandType = CommandType.StoredProcedure;


            cmd.Parameters.Add("@RequestID", SqlDbType.VarChar, 20).Value = ViewState["RequestID"];
            cmd.Parameters.Add("@usercode", SqlDbType.VarChar, 20).Value = Session["empcode"];

            //cmd.Parameters.Add("@actual_count_denier", SqlDbType.VarChar, 30).Value = txtcount.Text;
            //cmd.Parameters.Add("@count_cv ", SqlDbType.VarChar, 20).Value = txtcountcv.Text;
            //cmd.Parameters.Add("@tenacity", SqlDbType.VarChar, 20).Value = Txttenacity.Text;
            //cmd.Parameters.Add("@elongation", SqlDbType.VarChar, 20).Value = txtelongation.Text;
            //cmd.Parameters.Add("@OPU", SqlDbType.VarChar, 20).Value = txtOPU.Text;
            //cmd.Parameters.Add("@nip_mtr", SqlDbType.VarChar, 20).Value = txtnip.Text;
            //cmd.Parameters.Add("@BWS ", SqlDbType.VarChar, 20).Value = txtBWS.Text;
            //cmd.Parameters.Add("@CSP ", SqlDbType.VarChar, 20).Value = txtCSP.Text;
            //cmd.Parameters.Add("@U_percnt", SqlDbType.VarChar, 20).Value = txtu.Text;
            //cmd.Parameters.Add("@IPI", SqlDbType.VarChar, 20).Value = txtIPI.Text;
            //cmd.Parameters.Add("@Hairiness", SqlDbType.VarChar, 20).Value = txtHair.Text;
            //cmd.Parameters.Add("@TPI ", SqlDbType.VarChar, 20).Value = txtTPI.Text;
            //cmd.Parameters.Add("@Blend_per", SqlDbType.VarChar, 30).Value = txtBlend.Text;
            //cmd.Parameters.Add("@classimate_faults ", SqlDbType.VarChar, 30).Value = txtclassimate.Text;
            //cmd.Parameters.Add("@all_faults", SqlDbType.VarChar, 30).Value = txtallfaults.Text;
            //cmd.Parameters.Add("@Major_short_Thick", SqlDbType.VarChar, 30).Value = txtmajorthick.Text;
            //cmd.Parameters.Add("@short_thick", SqlDbType.VarChar, 20).Value = txtshortthick.Text;
            //cmd.Parameters.Add("@long_thick ", SqlDbType.VarChar, 20).Value = txtlngthick.Text;
            //cmd.Parameters.Add("@Thin_faults", SqlDbType.VarChar, 20).Value = txtthinfaults.Text;
            //cmd.Parameters.Add("@Major_thin", SqlDbType.VarChar, 20).Value = txtmajorthin.Text;
            cmd.Parameters.Add("@Quality", SqlDbType.VarChar, 20).Value = txtquality.Text;
            cmd.Parameters.Add("@sort_no", SqlDbType.VarChar, 20).Value = txtSortno.Text;
            cmd.Parameters.Add("@Sale_order", SqlDbType.VarChar, 20).Value = txtso.Text;
            cmd.Parameters.Add("@req_Qty", SqlDbType.VarChar, 20).Value = txtreqqty.Text;
            cmd.Parameters.Add("@UOM", SqlDbType.VarChar, 20).Value = ddluom.SelectedItem.Text;
            cmd.Parameters.Add("@req_date", SqlDbType.VarChar, 20).Value = txtreqdt.Text;
            cmd.Parameters.Add("@yarn_req", SqlDbType.VarChar, 20).Value = ddlyarn.SelectedItem.Text;
            cmd.Parameters.Add("@end_use", SqlDbType.VarChar, 20).Value = txtend.Text;
            cmd.Parameters.Add("@plant ", SqlDbType.VarChar, 20).Value = ddlplant.SelectedItem.Text;
            //cmd.Parameters.Add("@areacode", SqlDbType.VarChar, 10).Value = "1044";
            cmd.Parameters.Add("@purchaseby", SqlDbType.VarChar, 10).Value = "";
            cmd.Parameters.Add("@remarks", SqlDbType.VarChar, 30).Value = txtremarks.Text;
            //cmd.Parameters.Add("@lusture", SqlDbType.VarChar, 10).Value = txtlust.Text;

            con.Open();
            cmd.ExecuteNonQuery();
            con.Close();
            lbid.Text = ViewState["RequestID"].ToString();
            //ViewState.Remove("RequestID");


            string script = "alert(' record saved sucesfully.!!  please press clear button!!');";
            ScriptManager.RegisterStartupScript(this, this.GetType(), "ServerControlScript", script, true);
            lnksave.Enabled = false;
        }
        catch (Exception ex)
        {
            throw ex;
        }

    }


    protected void lnksave_Click(object sender, EventArgs e)
    {
        gencode();
        insert();
        SqlCommand cmd = new SqlCommand("jct_ops_yarn_purchase_select", con);
        con.Open();
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.Parameters.Add("@requestid", SqlDbType.VarChar, 30).Value = lbid.Text;
        cmd.ExecuteNonQuery();
        con.Close();
        SqlDataAdapter da = new SqlDataAdapter(cmd);
        DataSet ds = new DataSet();
        da.Fill(ds);
        GrdDetail.DataSource = ds.Tables[0];
        GrdDetail.DataBind();
        lbid.Visible = true;


    }
    protected void lnkclear_Click(object sender, EventArgs e)
    {
        Response.Redirect("outsourced_Yarn.aspx");
    }
    protected void rdlist_SelectedIndexChanged(object sender, EventArgs e)
    {

    }
    protected void GrdDetail_SelectedIndexChanged(object sender, EventArgs e)
    {
         lbid.Text = GrdDetail.SelectedRow.Cells[1].Text.Replace("&nbsp;", "");

         //txtcount.Text= GrdDetail.SelectedRow.Cells[4].Text.Replace("&nbsp;", "");
         //txtcountcv.Text= GrdDetail.SelectedRow.Cells[5].Text.Replace("&nbsp;", "");
         //Txttenacity.Text= GrdDetail.SelectedRow.Cells[6].Text.Replace("&nbsp;", "");
         //txtelongation.Text= GrdDetail.SelectedRow.Cells[7].Text.Replace("&nbsp;", "");
         //txtOPU.Text= GrdDetail.SelectedRow.Cells[8].Text.Replace("&nbsp;", "");
         //txtnip.Text= GrdDetail.SelectedRow.Cells[9].Text.Replace("&nbsp;", "");
         //txtBWS.Text= GrdDetail.SelectedRow.Cells[10].Text.Replace("&nbsp;", "");
         //txtCSP.Text= GrdDetail.SelectedRow.Cells[11].Text.Replace("&nbsp;", "");
         //txtu.Text= GrdDetail.SelectedRow.Cells[12].Text.Replace("&nbsp;", "");
         //txtIPI.Text= GrdDetail.SelectedRow.Cells[13].Text.Replace("&nbsp;", "");
         //txtHair.Text= GrdDetail.SelectedRow.Cells[14].Text.Replace("&nbsp;", "");
         //txtTPI.Text= GrdDetail.SelectedRow.Cells[15].Text.Replace("&nbsp;", "");
         //txtBlend.Text= GrdDetail.SelectedRow.Cells[16].Text.Replace("&nbsp;", "");
         //txtclassimate.Text= GrdDetail.SelectedRow.Cells[17].Text.Replace("&nbsp;", "");
         //txtallfaults.Text= GrdDetail.SelectedRow.Cells[18].Text.Replace("&nbsp;", "");
         //txtmajorthick.Text= GrdDetail.SelectedRow.Cells[19].Text.Replace("&nbsp;", "");
         //txtshortthick.Text= GrdDetail.SelectedRow.Cells[20].Text.Replace("&nbsp;", "");
         //txtlngthick.Text= GrdDetail.SelectedRow.Cells[21].Text.Replace("&nbsp;", "");
         //txtthinfaults.Text= GrdDetail.SelectedRow.Cells[22].Text.Replace("&nbsp;", "");
         //txtmajorthin.Text= GrdDetail.SelectedRow.Cells[23].Text.Replace("&nbsp;", "");
         txtquality.Text= GrdDetail.SelectedRow.Cells[4].Text.Replace("&nbsp;", "");
         txtSortno.Text= GrdDetail.SelectedRow.Cells[5].Text.Replace("&nbsp;", "");
         txtso.Text= GrdDetail.SelectedRow.Cells[6].Text.Replace("&nbsp;", "");
         txtreqqty.Text= GrdDetail.SelectedRow.Cells[7].Text.Replace("&nbsp;", "");
   
         txtreqdt.Text= GrdDetail.SelectedRow.Cells[8].Text.Replace("&nbsp;", "");

         txtend.Text = GrdDetail.SelectedRow.Cells[11].Text.Replace("&nbsp;", "");
        ddlplant.Text=GrdDetail.SelectedRow.Cells[33].Text.Replace("&nbsp;", "");
        ddluom.Text=GrdDetail.SelectedRow.Cells[8].Text.Replace("&nbsp;", "");
        ddlyarn.Text=GrdDetail.SelectedRow.Cells[10].Text.Replace("&nbsp;", "");

        //txtend.Text = GrdDetail.SelectedRow.Cells[31].Text.Replace("&nbsp;", "");
       txtremarks.Text =GrdDetail.SelectedRow.Cells[12].Text.Replace("&nbsp;", "");
        //txtlust.Text=GrdDetail.SelectedRow.Cells[37].Text.Replace("&nbsp;", "");
  


 
        

    
         }

    protected void lnkUpt_Click(object sender, EventArgs e)
    {


        if (txtreqqty.Text == "" || txtquality.Text == "")
        {
            string script = "alert(' Error Occured!  some data may be missing.. please fill!! ');";
            ScriptManager.RegisterStartupScript(this, this.GetType(), "ServerControlScript", script, true);

            return;
        }

        try
        {
            SqlCommand cmd = new SqlCommand("jct_ops_yarn_purchase_update", con);
            cmd.CommandType = CommandType.StoredProcedure;


            cmd.Parameters.Add("@RequestID", SqlDbType.VarChar, 20).Value = lbid.Text;
            cmd.Parameters.Add("@usercode", SqlDbType.VarChar, 20).Value = Session["empcode"];

            //cmd.Parameters.Add("@actual_count_denier", SqlDbType.VarChar, 30).Value = txtcount.Text;
            //cmd.Parameters.Add("@count_cv ", SqlDbType.VarChar, 20).Value = txtcountcv.Text;
            //cmd.Parameters.Add("@tenacity", SqlDbType.VarChar, 20).Value = Txttenacity.Text;
            //cmd.Parameters.Add("@elongation", SqlDbType.VarChar, 20).Value = txtelongation.Text;
            //cmd.Parameters.Add("@OPU", SqlDbType.VarChar, 20).Value = txtOPU.Text;
            //cmd.Parameters.Add("@nip_mtr", SqlDbType.VarChar, 20).Value = txtnip.Text;
            //cmd.Parameters.Add("@BWS ", SqlDbType.VarChar, 20).Value = txtBWS.Text;
            //cmd.Parameters.Add("@CSP ", SqlDbType.VarChar, 20).Value = txtCSP.Text;
            //cmd.Parameters.Add("@U_percnt", SqlDbType.VarChar, 20).Value = txtu.Text;
            //cmd.Parameters.Add("@IPI", SqlDbType.VarChar, 20).Value = txtIPI.Text;
            //cmd.Parameters.Add("@Hairiness", SqlDbType.VarChar, 20).Value = txtHair.Text;
            //cmd.Parameters.Add("@TPI ", SqlDbType.VarChar, 20).Value = txtTPI.Text;
            //cmd.Parameters.Add("@Blend_per", SqlDbType.VarChar, 30).Value = txtBlend.Text;
            //cmd.Parameters.Add("@classimate_faults ", SqlDbType.VarChar, 30).Value = txtclassimate.Text;
            //cmd.Parameters.Add("@all_faults", SqlDbType.VarChar, 30).Value = txtallfaults.Text;
            //cmd.Parameters.Add("@Major_short_Thick", SqlDbType.VarChar, 30).Value = txtmajorthick.Text;
            //cmd.Parameters.Add("@short_thick", SqlDbType.VarChar, 20).Value = txtshortthick.Text;
            //cmd.Parameters.Add("@long_thick ", SqlDbType.VarChar, 20).Value = txtlngthick.Text;
            //cmd.Parameters.Add("@Thin_faults", SqlDbType.VarChar, 20).Value = txtthinfaults.Text;
            //cmd.Parameters.Add("@Major_thin", SqlDbType.VarChar, 20).Value = txtmajorthin.Text;
            cmd.Parameters.Add("@Quality", SqlDbType.VarChar, 20).Value = txtquality.Text;
            cmd.Parameters.Add("@sort_no", SqlDbType.VarChar, 20).Value = txtSortno.Text;
            cmd.Parameters.Add("@Sale_order", SqlDbType.VarChar, 20).Value = txtso.Text;
            cmd.Parameters.Add("@req_Qty", SqlDbType.VarChar, 20).Value = txtreqqty.Text;
            cmd.Parameters.Add("@UOM", SqlDbType.VarChar, 20).Value = ddluom.SelectedItem.Text;
            cmd.Parameters.Add("@req_date", SqlDbType.VarChar, 20).Value = txtreqdt.Text;
            cmd.Parameters.Add("@yarn_req", SqlDbType.VarChar, 20).Value = ddlyarn.SelectedItem.Text;
            cmd.Parameters.Add("@end_use", SqlDbType.VarChar, 20).Value = txtend.Text;
            cmd.Parameters.Add("@plant ", SqlDbType.VarChar, 20).Value = ddlplant.SelectedItem.Text;
            cmd.Parameters.Add("@areacode", SqlDbType.VarChar, 10).Value = "1044";
            cmd.Parameters.Add("@purchaseby", SqlDbType.VarChar, 10).Value = "";
            cmd.Parameters.Add("@remarks", SqlDbType.VarChar, 30).Value = txtremarks.Text;
            //cmd.Parameters.Add("@lusture", SqlDbType.VarChar, 10).Value = txtlust.Text;

            con.Open();
            cmd.ExecuteNonQuery();
            con.Close();
            //lbid.Text = ViewState["RequestID"].ToString();
            //ViewState.Remove("RequestID");


            string script = "alert(' Record update sucesfully.!!  please press clear button!!');";
            ScriptManager.RegisterStartupScript(this, this.GetType(), "ServerControlScript", script, true);
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    protected void lnkdel_Click(object sender, EventArgs e)
    {
        SqlCommand cmd = new SqlCommand("jct_ops_yarn_purchase_delete", con);
        cmd.CommandType = CommandType.StoredProcedure;


        cmd.Parameters.Add("@RequestID", SqlDbType.VarChar, 20).Value = GrdDetail.SelectedRow.Cells[1].Text;

          con.Open();
            cmd.ExecuteNonQuery();
            con.Close();
            string script = "alert(' Record deleted sucesfully.!!  please press clear button!!');";
            ScriptManager.RegisterStartupScript(this, this.GetType(), "ServerControlScript", script, true);
    }
}
